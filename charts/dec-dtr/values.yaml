###############################################################
# Copyright (c) 2023 Robert Bosch Manufacturing Solutions GmbH
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

registry:
  enablePostgres: false
  registry:
    image: ghcr.io/catenax-ng/registry:0.3.0-M1
    replicaCount: 1
    imagePullPolicy: Never
    imagePullSecrets:
      - name: machineuser-pull-secret-ro
    containerPort: 4243
    host: localhost
    ## If 'authentication' is set to false, no OAuth authentication is enforced
    authentication: false
    idpIssuerUri: https://centralidp.dev.demo.catena-x.net/auth/realms/CX-Central
    idpClientId: Cl4-CX-DigitalTwin
    tenantId: demo-tenant
    service:
      port: 8080
      type: NodePort
    dataSource:
      driverClassName: org.postgresql.Driver
      ## The url, user, and password parameter will be ignored if 'enablePostgres' is set to true.
      ## In that case the postgresql auth parameters are used.
      url: jdbc:postgresql://postgresql:5432/registry
      user: registryuser
      password: ioueohg8o734dfsd
    ingress:
      enabled: true
      tls: false
      urlPrefix: /registry
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/rewrite-target: /$2
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
        nginx.ingress.kubernetes.io/x-forwarded-prefix: /registry
    resources:
      limits:
        memory: "1024Mi"
      requests:
        memory: "512Mi"

postgresql:
  fullnameOverride: postgresql
  service:
    ports:
      postgresql: 5432
  auth:
    postgresPassword: root
  primary:
    initdb:
      scripts: 
        init.sql: |
          CREATE USER edcprovider WITH ENCRYPTED PASSWORD 'oqerhf8734hewrin';
          ALTER USER edcprovider CREATEDB;
          CREATE DATABASE provider;
          ALTER DATABASE provider OWNER TO edcprovider;

          CREATE USER edcconsumer WITH ENCRYPTED PASSWORD 'oqerhf8734hewrin';
          ALTER USER edcconsumer CREATEDB;
          CREATE DATABASE consumer;
          ALTER DATABASE consumer OWNER TO edcconsumer;
          
          CREATE USER registryuser WITH ENCRYPTED PASSWORD 'ioueohg8o734dfsd';
          ALTER USER registryuser CREATEDB;
          CREATE DATABASE registry;
          ALTER DATABASE registry OWNER TO registryuser;

vault:
  enabled: true
  fullnameOverride: edc-vault
  server:
    dev:
      enabled: true
      devRootToken: "root"
    postStart:
      - "sh"
      - "-c"
      - |
        { 
        
        sleep 15

        /bin/vault kv put secret/data-encryption-aes-keys content=H7j47H6vVQQOv/hbdAYz+w==

        cat << EOF | /bin/vault kv put secret/daps-private-key content=-
        -----BEGIN PRIVATE KEY-----
        MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCbX9S8de5FTWl4
        QYdQtkE/yPyCitcBC9TPxmdvWJU22V0jb0YJJeRMfGmHrrFNx6B0Xxp5qhTWY9/c
        vMxBRTWShkdSrqxEL7nS4VxknYCMXkhcpCUM81ZHm09c/npFnKpfGM8Ud65MD5ix
        jKvMRWHMSJ46I1rEkMze5Xmm/4VNEfP7Ew6A0GidHVDIyHq1zAH4RBqCh4WXQOMR
        cB6X1YbiE4b+sOJcCtMxpWOdMb/JyYXQd5KdtEL7f/5+H8KHNAnIRu+JfrvKbJhE
        lPLKe38y2uqDn+yx0hJ7GPDdmaIU16Zkg6Eh16mhLCckcUzgmPwHmWrRrWNjlFz2
        UOPvXRFdAgMBAAECggEAN2yd5IRk9I/CucUWUfJRoEE/4glI3PSte1iY+R0uTRyI
        nuVIpGbB447VzjLAyLAXSqvKM/A58qg56PHoIrhffd8sfhAVH1WvAcymOrX8bxYK
        1hEvrkj3VB/Q1alpUH+sPrQI2pI+uJ8vptY5SmrNkiOtXavS6x+EFVbiaHHpyS26
        ASaCoRpdBoNTm0SAiDBTK6MqTs4vRpqKseGdC76F+jKimYrTJY19ZctSIAMjrnqd
        qzRL+jfob5vMqKC22AjInkZ8BZWll1ZoTnv37bq2NAb9lvdY73REm42Wpm5S7PET
        Eixe69gvi/IwaSe27S36+kcrQoYHnxbb31+Xt+0pQQKBgQDJfA2ZnYmcA3yvVQhi
        e76I3rq6AEfcG4EDhf+JRO2QHKMMXLwfFAdSR8QflxNUWy1y6q/783EpgLJ1Kv8h
        uNkTH6JyV7kFhwfvxWreAWx2jRQRACqnuaLnJ/28vd8Il0kc3/BQsWzbg6YTERrq
        0Au2RW/c9blrKS0MyurtOtZsiQKBgQDFaezSCWUspeNci5lrdvMiHBLOUgR2guQm
        Gtf9RdBmzvtBqpdkP8AEMhRW7oSGcKpDldd0Klyml7s/CDYTL7sflHtKRiTQmWuJ
        +p3uvyylAxr/Swfw56hj5Y4/Oj2CLIuUlglewo40JnvvM5icT7RGvbyaIIhYzIsR
        HTv3t8eRNQKBgA4l8eaJk3IrJIRDWlVgDx8ZVM9e2azxGXwf2rPO7UejWyexE1yz
        UVhLxc/aEfdod6aMKFNu4tFhQibMICJEEqovHH8e/dUPiFUj7b8tJmqkuXYAJv6k
        IHZO7phkVNcLmIy4hO2Fp/k6I11PZC588XWZJqPDdYO63nj5fsmtygTRAoGBAJ72
        YH/wmMuO+Ll4n51tNvJscKg6WuWjGFumme2T3fArEx8ZYraSruex+7bUcVpgNnod
        mlQsGFb9LwXecsyYTrFrOqvgN5zRLUr5x1qMDkMBcSfJHyfZIjruidBX8Vd0zyBi
        gEERoLhVlM5UWbrkY2HjPo9NSv1WF1U8mSErl0NRAoGAYC3RxEfGxD9+Qi08nQgg
        s/48hLdD2k2q4t3FrDsIGPAIEs52CGp9JWil9RyIQxBXWejETwDz+PgmD6U86Mhh
        Qf5css6pcP/w1XF8vsyXfPnecgPSyOE4CgLtnQLxNriMiy5pfALELLyxoBQ+nquz
        fMNLPC4K85ps/Uu9uzSatl0=
        -----END PRIVATE KEY-----
        EOF
        
        cat << EOF | /bin/vault kv put secret/daps-public-key content=-
        -----BEGIN CERTIFICATE-----
        MIID7TCCAtWgAwIBAgIUJ0bwxUc7n3YK89mOyGXrLx2KO0YwDQYJKoZIhvcNAQEL
        BQAwgYUxCzAJBgNVBAYTAkRFMQ8wDQYDVQQIDAZCZXJsaW4xDzANBgNVBAcMBkJl
        cmxpbjEMMAoGA1UECgwDQk1XMSAwHgYDVQQLDBdlZGMtcGxheWdyb3VuZC1wYXJ0
        bmVyMjEkMCIGA1UEAwwbcGxhdG8tZWRjLmRlbW8uY2F0ZW5hLXgubmV0MB4XDTIy
        MDQyNTEwMjgwMloXDTIzMDQyNTEwMjgwMlowgYUxCzAJBgNVBAYTAkRFMQ8wDQYD
        VQQIDAZCZXJsaW4xDzANBgNVBAcMBkJlcmxpbjEMMAoGA1UECgwDQk1XMSAwHgYD
        VQQLDBdlZGMtcGxheWdyb3VuZC1wYXJ0bmVyMjEkMCIGA1UEAwwbcGxhdG8tZWRj
        LmRlbW8uY2F0ZW5hLXgubmV0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC
        AQEAm1/UvHXuRU1peEGHULZBP8j8gorXAQvUz8Znb1iVNtldI29GCSXkTHxph66x
        TcegdF8aeaoU1mPf3LzMQUU1koZHUq6sRC+50uFcZJ2AjF5IXKQlDPNWR5tPXP56
        RZyqXxjPFHeuTA+YsYyrzEVhzEieOiNaxJDM3uV5pv+FTRHz+xMOgNBonR1QyMh6
        tcwB+EQagoeFl0DjEXAel9WG4hOG/rDiXArTMaVjnTG/ycmF0HeSnbRC+3/+fh/C
        hzQJyEbviX67ymyYRJTyynt/Mtrqg5/ssdISexjw3ZmiFNemZIOhIdepoSwnJHFM
        4Jj8B5lq0a1jY5Rc9lDj710RXQIDAQABo1MwUTAdBgNVHQ4EFgQUmYOnF4b/mJPO
        oN2h8Tb69g91CiMwHwYDVR0jBBgwFoAUmYOnF4b/mJPOoN2h8Tb69g91CiMwDwYD
        VR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAKxv/MTIEKNkzReOqrzpt
        LM00X6JsDdfxa3rZ0Uq17PjO0R63IPsqzexhfZUML0e/Dwpe97xpvftCOEuICMBA
        wOHhQc77MgwyF4dqgRgfJysxw37ACZxU6GI/K2JpKXQLgEhP14oHUIWOzCAbgDhR
        jwOx3ZP176Vjxx90pW3hOphRVnq/BRqqEDtFwRzKtGnGvP8ecmC2iY4dXEA3QEp1
        gzg03eglvZSoedEPY5o5y/4n6TplaDmaeoo0QrvAiWik1gY85Lg21aBWVsP45wVS
        tFn3m1FCCV8XYIj/EEUAh8VEhphLVEViE6m9Mm4deFDavXcGBb63BCiOQtnjd3eY
        zQ==
        -----END CERTIFICATE-----
        EOF
        }

daps:
  enabled: true
  fullnameOverride: "ids-daps"
  daps:
    secret:
      clientId: clientId
      clientSecret: clientSecret
  ingress:
    enabled: true
    host: daps-host
    tls:
      enabled: true
      certMgr:
        enabled: true
        issuer: letsencrypt-prod

provider:
  enabled: true
  fullnameOverride: "provider-edc"
  backendService:
    httpProxyTokenReceiverUrl: http://localhost
  # dataplane:
  #   url:
  #     public: http://provider-edc-dataplane:8081/api/public
  controlplane:
    env:
      EDC_TRANSFER_PROXY_TOKEN_VALIDITY_SECONDS: 86400
      EDC_DATAPLANE_TOKEN_VALIDATION_ENDPOINT: http://provider-edc-controlplane:8082/validation/token
      EDC_DATAPLANE_SELECTOR_DEFAULTPLANE_PROPERTIES: >-
        { 
          "publicApiUrl": "http://provider-edc-dataplane:8081/api/public"
        }
    image:
      repository: edc-controlplane-postgresql-hashicorp-vault
      tag: 0.1.3
    endpoints:
      default:
        port: "8080"
        path: /api
      data:
        port: "8181"
        path: /data
        authKey: password
      validation:
        port: "8082"
        path: /validation
      control:
        port: "9999"
        path: /api/controlplane/control
      ids:
        port: "8282"
        path: /api/v1/ids
      metrics:
        port: "9090"
        path: /metrics    
  postgresql:
    enabled: true
    jdbcUrl: jdbc:postgresql://postgresql:5432/provider
    username: edcprovider
    password: oqerhf8734hewrin
  daps:
    clientId: 99:83:A7:17:86:FF:98:93:CE:A0:DD:A1:F1:36:FA:F6:0F:75:0A:23:keyid:99:83:A7:17:86:FF:98:93:CE:A0:DD:A1:F1:36:FA:F6:0F:75:0A:23
    url: http://ids-daps:4567
  vault:
    hashicorp:
      enabled: true
      token: root
      url: http://edc-vault:8200
      secret: /v1/secret
    secretNames:
      transferProxyTokenSignerPrivateKey: daps-private-key
      transferProxyTokenSignerPublicKey: daps-public-key
      transferProxyTokenEncryptionAesKey: data-encryption-aes-keys
      dapsPrivateKey: daps-private-key
      dapsPublicKey: daps-public-key

consumer:
  enabled: true
  fullnameOverride: "consumer-edc"
  backendService:
    httpProxyTokenReceiverUrl: http://localhost
  # dataplane:
  #   url:
  #     public: http://consumer-edc-dataplane:8081/api/public
  controlplane:
    env:
      # edc.transfer.proxy.token.validity.seconds
      EDC_TRANSFER_PROXY_TOKEN_VALIDITY_SECONDS: 86400
      EDC_DATAPLANE_TOKEN_VALIDATION_ENDPOINT: http://consumer-edc-controlplane:8082/validation/token
      EDC_DATAPLANE_SELECTOR_DEFAULTPLANE_PROPERTIES: >-
        { 
          "publicApiUrl": "http://consumer-edc-dataplane:8081/api/public"
        }
    image:
      repository: edc-controlplane-postgresql-hashicorp-vault
      tag: 0.1.3
    endpoints:
      default:
        port: "8080"
        path: /api
      data:
        port: "8181"
        path: /data
        authKey: password
      validation:
        port: "8082"
        path: /validation
      control:
        port: "9999"
        path: /api/controlplane/control
      ids:
        port: "8282"
        path: /api/v1/ids
      metrics:
        port: "9090"
        path: /metrics
  postgresql:
    enabled: true
    jdbcUrl: jdbc:postgresql://postgresql:5432/consumer
    username: edcconsumer
    password: oqerhf8734hewrin
  daps:
    clientId: 99:83:A7:17:86:FF:98:93:CE:A0:DD:A1:F1:36:FA:F6:0F:75:0A:23:keyid:99:83:A7:17:86:FF:98:93:CE:A0:DD:A1:F1:36:FA:F6:0F:75:0A:23
    url: http://ids-daps:4567
  vault:
    hashicorp:
      enabled: true
      token: root
      url: http://edc-vault:8200
      secret: /v1/secret
    secretNames:
      transferProxyTokenSignerPrivateKey: daps-private-key
      transferProxyTokenSignerPublicKey: daps-public-key
      transferProxyTokenEncryptionAesKey: data-encryption-aes-keys
      dapsPrivateKey: daps-private-key
      dapsPublicKey: daps-public-key
